/data/happythgus/newLDA/DC
/data/opt/anaconda3/envs/pytorch1.12.1_p38/bin/python
moana-r4
main.py:95: DeprecationWarning: an integer is required (got type numpy.float64).  Implicit conversion to integers using __int__ is deprecated, and may be removed in a future version of Python.
  label_syn = torch.tensor([np.ones(args.ipc)*i for i in range(num_classes)], dtype=torch.long, requires_grad=False, device=args.device).view(-1) # [0,0,0, 1,1,1, ..., 9,9,9]
main.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/torch/csrc/utils/tensor_new.cpp:201.)
  label_syn = torch.tensor([np.ones(args.ipc)*i for i in range(num_classes)], dtype=torch.long, requires_grad=False, device=args.device).view(-1) # [0,0,0, 1,1,1, ..., 9,9,9]
eval_it_pool:  [0, 500, 1000]
Files already downloaded and verified
Files already downloaded and verified

================== Exp 0 ==================
 
Hyper-parameters: 
 {'method': 'DC', 'dataset': 'CIFAR10', 'model': 'ConvNet', 'ipc': 10, 'eval_mode': 'S', 'num_exp': 1, 'num_eval': 20, 'epoch_eval_train': 300, 'Iteration': 1000, 'lr_img': 0.1, 'lr_net': 0.01, 'batch_real': 256, 'batch_train': 256, 'init': 'noise', 'dsa_strategy': 'None', 'data_path': 'data', 'save_path': 'result', 'dis_metric': 'ours', 'outer_loop': 10, 'inner_loop': 50, 'device': 'cuda', 'dsa_param': <utils.ParamDiffAug object at 0x7f74e053bcd0>, 'dsa': False}
Evaluation model pool:  ['ConvNet']
class c = 0: 5000 real images
class c = 1: 5000 real images
class c = 2: 5000 real images
class c = 3: 5000 real images
class c = 4: 5000 real images
class c = 5: 5000 real images
class c = 6: 5000 real images
class c = 7: 5000 real images
class c = 8: 5000 real images
class c = 9: 5000 real images
real images channel 0, mean = -0.0000, std = 1.2211
real images channel 1, mean = -0.0002, std = 1.2211
real images channel 2, mean = 0.0002, std = 1.3014
initialize synthetic data from random noise
[2023-10-27 18:42:49] training begins
-------------------------
Evaluation
model_train = ConvNet, model_eval = ConvNet, iteration = 0
DC augmentation parameters: 
 {'crop': 4, 'scale': 0.2, 'rotate': 45, 'noise': 0.001, 'strategy': 'none'}
[2023-10-27 18:42:54] Evaluate_00: epoch = 0300 train time = 3 s train loss = 0.003621 train acc = 1.0000, test acc = 0.1159
[2023-10-27 18:42:57] Evaluate_01: epoch = 0300 train time = 1 s train loss = 0.003637 train acc = 1.0000, test acc = 0.1077
[2023-10-27 18:43:00] Evaluate_02: epoch = 0300 train time = 1 s train loss = 0.003713 train acc = 1.0000, test acc = 0.1124
[2023-10-27 18:43:03] Evaluate_03: epoch = 0300 train time = 1 s train loss = 0.003678 train acc = 1.0000, test acc = 0.0996
[2023-10-27 18:43:06] Evaluate_04: epoch = 0300 train time = 1 s train loss = 0.003692 train acc = 1.0000, test acc = 0.1115
[2023-10-27 18:43:09] Evaluate_05: epoch = 0300 train time = 1 s train loss = 0.003655 train acc = 1.0000, test acc = 0.0879
[2023-10-27 18:43:12] Evaluate_06: epoch = 0300 train time = 1 s train loss = 0.003639 train acc = 1.0000, test acc = 0.1200
[2023-10-27 18:43:16] Evaluate_07: epoch = 0300 train time = 1 s train loss = 0.003663 train acc = 1.0000, test acc = 0.1238
[2023-10-27 18:43:19] Evaluate_08: epoch = 0300 train time = 1 s train loss = 0.003660 train acc = 1.0000, test acc = 0.1299
[2023-10-27 18:43:22] Evaluate_09: epoch = 0300 train time = 1 s train loss = 0.003643 train acc = 1.0000, test acc = 0.1127
[2023-10-27 18:43:25] Evaluate_10: epoch = 0300 train time = 1 s train loss = 0.003685 train acc = 1.0000, test acc = 0.1168
[2023-10-27 18:43:28] Evaluate_11: epoch = 0300 train time = 1 s train loss = 0.003599 train acc = 1.0000, test acc = 0.1034
[2023-10-27 18:43:31] Evaluate_12: epoch = 0300 train time = 1 s train loss = 0.003645 train acc = 1.0000, test acc = 0.1146
[2023-10-27 18:43:34] Evaluate_13: epoch = 0300 train time = 1 s train loss = 0.003787 train acc = 1.0000, test acc = 0.1007
[2023-10-27 18:43:37] Evaluate_14: epoch = 0300 train time = 1 s train loss = 0.003581 train acc = 1.0000, test acc = 0.1148
[2023-10-27 18:43:40] Evaluate_15: epoch = 0300 train time = 1 s train loss = 0.003585 train acc = 1.0000, test acc = 0.1212
[2023-10-27 18:43:44] Evaluate_16: epoch = 0300 train time = 1 s train loss = 0.003602 train acc = 1.0000, test acc = 0.1006
[2023-10-27 18:43:47] Evaluate_17: epoch = 0300 train time = 1 s train loss = 0.003695 train acc = 1.0000, test acc = 0.1256
[2023-10-27 18:43:50] Evaluate_18: epoch = 0300 train time = 1 s train loss = 0.003654 train acc = 1.0000, test acc = 0.1075
[2023-10-27 18:43:53] Evaluate_19: epoch = 0300 train time = 1 s train loss = 0.003641 train acc = 1.0000, test acc = 0.1139
Evaluate 20 random ConvNet, mean = 0.1120 std = 0.0099
-------------------------
Traceback (most recent call last):
  File "main.py", line 266, in <module>
    main()
  File "main.py", line 228, in main
    lda_loss = LDALoss(lda_X, lda_Y)
  File "/data/happythgus/newLDA/DC/utils.py", line 19, in LDALoss
    if (key == 1) :
UnboundLocalError: local variable 'key' referenced before assignment
