/data/happythgus/LDA/DC
/data/opt/anaconda3/bin/python
moana-r3
/data/happythgus/LDA/DC/main.py:90: DeprecationWarning: an integer is required (got type numpy.float64).  Implicit conversion to integers using __int__ is deprecated, and may be removed in a future version of Python.
  label_syn = torch.tensor([np.ones(args.ipc)*i for i in range(num_classes)], dtype=torch.long, requires_grad=False, device=args.device).view(-1) # [0,0,0, 1,1,1, ..., 9,9,9]
/data/happythgus/LDA/DC/main.py:90: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:245.)
  label_syn = torch.tensor([np.ones(args.ipc)*i for i in range(num_classes)], dtype=torch.long, requires_grad=False, device=args.device).view(-1) # [0,0,0, 1,1,1, ..., 9,9,9]
eval_it_pool:  [0, 500, 1000]
Files already downloaded and verified
Files already downloaded and verified

================== Exp 0 ==================
 
Hyper-parameters: 
 {'method': 'DC', 'dataset': 'CIFAR10', 'model': 'ConvNet', 'ipc': 1, 'eval_mode': 'S', 'num_exp': 5, 'num_eval': 20, 'epoch_eval_train': 300, 'Iteration': 1000, 'lr_img': 0.1, 'lr_net': 0.01, 'batch_real': 256, 'batch_train': 256, 'init': 'noise', 'dsa_strategy': 'None', 'data_path': 'data', 'save_path': 'result', 'dis_metric': 'ours', 'outer_loop': 1, 'inner_loop': 1, 'device': 'cuda', 'dsa_param': <utils.ParamDiffAug object at 0x7f983b70cc70>, 'dsa': False}
Evaluation model pool:  ['ConvNet']
class c = 0: 5000 real images
class c = 1: 5000 real images
class c = 2: 5000 real images
class c = 3: 5000 real images
class c = 4: 5000 real images
class c = 5: 5000 real images
class c = 6: 5000 real images
class c = 7: 5000 real images
class c = 8: 5000 real images
class c = 9: 5000 real images
real images channel 0, mean = -0.0000, std = 1.2211
real images channel 1, mean = -0.0002, std = 1.2211
real images channel 2, mean = 0.0002, std = 1.3014
initialize synthetic data from random noise
[2023-10-17 00:44:22] training begins
-------------------------
Evaluation
model_train = ConvNet, model_eval = ConvNet, iteration = 0
DC augmentation parameters: 
 {'crop': 4, 'scale': 0.2, 'rotate': 45, 'noise': 0.001, 'strategy': 'none'}
[2023-10-17 00:44:26] Evaluate_00: epoch = 0300 train time = 2 s train loss = 0.000440 train acc = 1.0000, test acc = 0.0823
[2023-10-17 00:44:28] Evaluate_01: epoch = 0300 train time = 0 s train loss = 0.000421 train acc = 1.0000, test acc = 0.0984
[2023-10-17 00:44:31] Evaluate_02: epoch = 0300 train time = 0 s train loss = 0.000440 train acc = 1.0000, test acc = 0.0966
[2023-10-17 00:44:34] Evaluate_03: epoch = 0300 train time = 0 s train loss = 0.000410 train acc = 1.0000, test acc = 0.1114
[2023-10-17 00:44:36] Evaluate_04: epoch = 0300 train time = 0 s train loss = 0.000429 train acc = 1.0000, test acc = 0.0860
[2023-10-17 00:44:39] Evaluate_05: epoch = 0300 train time = 0 s train loss = 0.000386 train acc = 1.0000, test acc = 0.1073
[2023-10-17 00:44:42] Evaluate_06: epoch = 0300 train time = 0 s train loss = 0.000396 train acc = 1.0000, test acc = 0.1117
[2023-10-17 00:44:44] Evaluate_07: epoch = 0300 train time = 0 s train loss = 0.000432 train acc = 1.0000, test acc = 0.0799
[2023-10-17 00:44:47] Evaluate_08: epoch = 0300 train time = 0 s train loss = 0.000420 train acc = 1.0000, test acc = 0.1059
[2023-10-17 00:44:50] Evaluate_09: epoch = 0300 train time = 0 s train loss = 0.000427 train acc = 1.0000, test acc = 0.1030
[2023-10-17 00:44:52] Evaluate_10: epoch = 0300 train time = 0 s train loss = 0.000431 train acc = 1.0000, test acc = 0.0978
[2023-10-17 00:44:55] Evaluate_11: epoch = 0300 train time = 0 s train loss = 0.000436 train acc = 1.0000, test acc = 0.0930
[2023-10-17 00:44:58] Evaluate_12: epoch = 0300 train time = 0 s train loss = 0.000434 train acc = 1.0000, test acc = 0.0838
[2023-10-17 00:45:00] Evaluate_13: epoch = 0300 train time = 0 s train loss = 0.000417 train acc = 1.0000, test acc = 0.0892
[2023-10-17 00:45:03] Evaluate_14: epoch = 0300 train time = 0 s train loss = 0.000430 train acc = 1.0000, test acc = 0.0864
[2023-10-17 00:45:06] Evaluate_15: epoch = 0300 train time = 0 s train loss = 0.000400 train acc = 1.0000, test acc = 0.1027
[2023-10-17 00:45:08] Evaluate_16: epoch = 0300 train time = 0 s train loss = 0.000390 train acc = 1.0000, test acc = 0.0809
[2023-10-17 00:45:11] Evaluate_17: epoch = 0300 train time = 0 s train loss = 0.000422 train acc = 1.0000, test acc = 0.1202
[2023-10-17 00:45:14] Evaluate_18: epoch = 0300 train time = 0 s train loss = 0.000407 train acc = 1.0000, test acc = 0.0989
[2023-10-17 00:45:16] Evaluate_19: epoch = 0300 train time = 0 s train loss = 0.000412 train acc = 1.0000, test acc = 0.0845
Evaluate 20 random ConvNet, mean = 0.0960 std = 0.0114
-------------------------
-0.004366485867649317
0.06577156484127045
-0.00447278143838048
Traceback (most recent call last):
  File "/data/happythgus/LDA/DC/main.py", line 263, in <module>
    main()
  File "/data/happythgus/LDA/DC/main.py", line 221, in main
    lda_loss = LDALoss(lda_X, lda_Y).cuda()
  File "/data/happythgus/LDA/DC/utils.py", line 37, in LDALoss
    diff = (class_samples.to('cuda') - class_mean.to('cuda'))
AttributeError: 'float' object has no attribute 'to'
