/data/happythgus/LDA/DC
/data/opt/anaconda3/bin/python
moana-r3
/data/happythgus/LDA/DC/main.py:90: DeprecationWarning: an integer is required (got type numpy.float64).  Implicit conversion to integers using __int__ is deprecated, and may be removed in a future version of Python.
  label_syn = torch.tensor([np.ones(args.ipc)*i for i in range(num_classes)], dtype=torch.long, requires_grad=False, device=args.device).view(-1) # [0,0,0, 1,1,1, ..., 9,9,9]
/data/happythgus/LDA/DC/main.py:90: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:245.)
  label_syn = torch.tensor([np.ones(args.ipc)*i for i in range(num_classes)], dtype=torch.long, requires_grad=False, device=args.device).view(-1) # [0,0,0, 1,1,1, ..., 9,9,9]
eval_it_pool:  [0, 500, 1000]

================== Exp 0 ==================
 
Hyper-parameters: 
 {'method': 'DC', 'dataset': 'MNIST', 'model': 'ConvNet', 'ipc': 1, 'eval_mode': 'S', 'num_exp': 5, 'num_eval': 20, 'epoch_eval_train': 300, 'Iteration': 1000, 'lr_img': 0.1, 'lr_net': 0.01, 'batch_real': 256, 'batch_train': 256, 'init': 'noise', 'dsa_strategy': 'None', 'data_path': 'data', 'save_path': 'result', 'dis_metric': 'ours', 'outer_loop': 1, 'inner_loop': 1, 'device': 'cuda', 'dsa_param': <utils.ParamDiffAug object at 0x7f819ab29e80>, 'dsa': False}
Evaluation model pool:  ['ConvNet']
class c = 0: 5923 real images
class c = 1: 6742 real images
class c = 2: 5958 real images
class c = 3: 6131 real images
class c = 4: 5842 real images
class c = 5: 5421 real images
class c = 6: 5918 real images
class c = 7: 6265 real images
class c = 8: 5851 real images
class c = 9: 5949 real images
real images channel 0, mean = -0.0001, std = 1.0000
initialize synthetic data from random noise
[2023-10-16 00:57:29] training begins
-------------------------
Evaluation
model_train = ConvNet, model_eval = ConvNet, iteration = 0
DC augmentation parameters: 
 {'crop': 4, 'scale': 0.2, 'rotate': 45, 'noise': 0.001, 'strategy': 'crop_scale_rotate'}
batchnorm
[2023-10-16 00:57:36] Evaluate_00: epoch = 1000 train time = 5 s train loss = 0.000363 train acc = 1.0000, test acc = 0.1289
batchnorm
[2023-10-16 00:57:42] Evaluate_01: epoch = 1000 train time = 4 s train loss = 0.000497 train acc = 1.0000, test acc = 0.1189
batchnorm
[2023-10-16 00:57:48] Evaluate_02: epoch = 1000 train time = 4 s train loss = 0.003918 train acc = 1.0000, test acc = 0.1111
batchnorm
[2023-10-16 00:57:54] Evaluate_03: epoch = 1000 train time = 4 s train loss = 0.001096 train acc = 1.0000, test acc = 0.1227
batchnorm
[2023-10-16 00:58:00] Evaluate_04: epoch = 1000 train time = 4 s train loss = 0.000603 train acc = 1.0000, test acc = 0.1185
batchnorm
[2023-10-16 00:58:06] Evaluate_05: epoch = 1000 train time = 4 s train loss = 0.000424 train acc = 1.0000, test acc = 0.1289
batchnorm
[2023-10-16 00:58:12] Evaluate_06: epoch = 1000 train time = 4 s train loss = 0.001655 train acc = 1.0000, test acc = 0.0998
batchnorm
[2023-10-16 00:58:18] Evaluate_07: epoch = 1000 train time = 4 s train loss = 0.000868 train acc = 1.0000, test acc = 0.1158
batchnorm
[2023-10-16 00:58:24] Evaluate_08: epoch = 1000 train time = 4 s train loss = 0.001027 train acc = 1.0000, test acc = 0.1281
batchnorm
[2023-10-16 00:58:30] Evaluate_09: epoch = 1000 train time = 4 s train loss = 0.000620 train acc = 1.0000, test acc = 0.1205
batchnorm
[2023-10-16 00:58:36] Evaluate_10: epoch = 1000 train time = 4 s train loss = 0.001076 train acc = 1.0000, test acc = 0.1286
batchnorm
[2023-10-16 00:58:42] Evaluate_11: epoch = 1000 train time = 4 s train loss = 0.001836 train acc = 1.0000, test acc = 0.0960
batchnorm
[2023-10-16 00:58:48] Evaluate_12: epoch = 1000 train time = 4 s train loss = 0.000099 train acc = 1.0000, test acc = 0.1396
batchnorm
[2023-10-16 00:58:54] Evaluate_13: epoch = 1000 train time = 4 s train loss = 0.000683 train acc = 1.0000, test acc = 0.1264
batchnorm
[2023-10-16 00:59:00] Evaluate_14: epoch = 1000 train time = 4 s train loss = 0.002124 train acc = 1.0000, test acc = 0.1156
batchnorm
[2023-10-16 00:59:06] Evaluate_15: epoch = 1000 train time = 4 s train loss = 0.000907 train acc = 1.0000, test acc = 0.1238
batchnorm
[2023-10-16 00:59:12] Evaluate_16: epoch = 1000 train time = 4 s train loss = 0.000282 train acc = 1.0000, test acc = 0.1262
batchnorm
[2023-10-16 00:59:18] Evaluate_17: epoch = 1000 train time = 4 s train loss = 0.000294 train acc = 1.0000, test acc = 0.1156
batchnorm
[2023-10-16 00:59:24] Evaluate_18: epoch = 1000 train time = 4 s train loss = 0.003284 train acc = 1.0000, test acc = 0.1251
batchnorm
[2023-10-16 00:59:30] Evaluate_19: epoch = 1000 train time = 4 s train loss = 0.001485 train acc = 1.0000, test acc = 0.1262
Evaluate 20 random ConvNet, mean = 0.1208 std = 0.0099
-------------------------
batchnorm
Traceback (most recent call last):
  File "/data/happythgus/LDA/DC/main.py", line 296, in <module>
    main()
  File "/data/happythgus/LDA/DC/main.py", line 250, in main
    lda_loss = LDALoss(lda_X, lda_Y).cuda()
  File "/data/happythgus/LDA/DC/utils.py", line 44, in LDALoss
    print(LDALoss)
UnboundLocalError: local variable 'LDALoss' referenced before assignment
