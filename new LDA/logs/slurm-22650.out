/data/happythgus/newLDA/DC
/data/opt/anaconda3/envs/pytorch1.12.1_p38/bin/python
moana-r2
main.py:95: DeprecationWarning: an integer is required (got type numpy.float64).  Implicit conversion to integers using __int__ is deprecated, and may be removed in a future version of Python.
  label_syn = torch.tensor([np.ones(args.ipc)*i for i in range(num_classes)], dtype=torch.long, requires_grad=False, device=args.device).view(-1) # [0,0,0, 1,1,1, ..., 9,9,9]
main.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/torch/csrc/utils/tensor_new.cpp:201.)
  label_syn = torch.tensor([np.ones(args.ipc)*i for i in range(num_classes)], dtype=torch.long, requires_grad=False, device=args.device).view(-1) # [0,0,0, 1,1,1, ..., 9,9,9]
eval_it_pool:  [0, 500, 1000]
Files already downloaded and verified
Files already downloaded and verified

================== Exp 0 ==================
 
Hyper-parameters: 
 {'method': 'DC', 'dataset': 'CIFAR10', 'model': 'ConvNet', 'ipc': 10, 'eval_mode': 'S', 'num_exp': 1, 'num_eval': 20, 'epoch_eval_train': 300, 'Iteration': 1000, 'lr_img': 0.1, 'lr_net': 0.01, 'batch_real': 256, 'batch_train': 256, 'init': 'noise', 'dsa_strategy': 'None', 'data_path': 'data', 'save_path': 'result', 'dis_metric': 'ours', 'outer_loop': 10, 'inner_loop': 50, 'device': 'cuda', 'dsa_param': <utils.ParamDiffAug object at 0x7f05465efd00>, 'dsa': False}
Evaluation model pool:  ['ConvNet']
class c = 0: 5000 real images
class c = 1: 5000 real images
class c = 2: 5000 real images
class c = 3: 5000 real images
class c = 4: 5000 real images
class c = 5: 5000 real images
class c = 6: 5000 real images
class c = 7: 5000 real images
class c = 8: 5000 real images
class c = 9: 5000 real images
real images channel 0, mean = -0.0000, std = 1.2211
real images channel 1, mean = -0.0002, std = 1.2211
real images channel 2, mean = 0.0002, std = 1.3014
initialize synthetic data from random noise
[2023-10-27 18:16:39] training begins
-------------------------
Evaluation
model_train = ConvNet, model_eval = ConvNet, iteration = 0
DC augmentation parameters: 
 {'crop': 4, 'scale': 0.2, 'rotate': 45, 'noise': 0.001, 'strategy': 'none'}
[2023-10-27 18:16:47] Evaluate_00: epoch = 0300 train time = 5 s train loss = 0.003763 train acc = 1.0000, test acc = 0.1017
[2023-10-27 18:16:52] Evaluate_01: epoch = 0300 train time = 2 s train loss = 0.003659 train acc = 1.0000, test acc = 0.0955
[2023-10-27 18:16:56] Evaluate_02: epoch = 0300 train time = 2 s train loss = 0.003744 train acc = 1.0000, test acc = 0.0976
[2023-10-27 18:17:01] Evaluate_03: epoch = 0300 train time = 2 s train loss = 0.003739 train acc = 1.0000, test acc = 0.1172
[2023-10-27 18:17:05] Evaluate_04: epoch = 0300 train time = 2 s train loss = 0.003671 train acc = 1.0000, test acc = 0.0988
[2023-10-27 18:17:10] Evaluate_05: epoch = 0300 train time = 2 s train loss = 0.003718 train acc = 1.0000, test acc = 0.0979
[2023-10-27 18:17:14] Evaluate_06: epoch = 0300 train time = 2 s train loss = 0.003735 train acc = 1.0000, test acc = 0.1252
[2023-10-27 18:17:18] Evaluate_07: epoch = 0300 train time = 2 s train loss = 0.003753 train acc = 1.0000, test acc = 0.1019
[2023-10-27 18:17:23] Evaluate_08: epoch = 0300 train time = 2 s train loss = 0.003668 train acc = 1.0000, test acc = 0.1111
[2023-10-27 18:17:27] Evaluate_09: epoch = 0300 train time = 2 s train loss = 0.003711 train acc = 1.0000, test acc = 0.1020
[2023-10-27 18:17:32] Evaluate_10: epoch = 0300 train time = 2 s train loss = 0.003755 train acc = 1.0000, test acc = 0.1159
[2023-10-27 18:17:36] Evaluate_11: epoch = 0300 train time = 2 s train loss = 0.003731 train acc = 1.0000, test acc = 0.1011
[2023-10-27 18:17:41] Evaluate_12: epoch = 0300 train time = 2 s train loss = 0.003698 train acc = 1.0000, test acc = 0.0986
[2023-10-27 18:17:45] Evaluate_13: epoch = 0300 train time = 2 s train loss = 0.003713 train acc = 1.0000, test acc = 0.0980
[2023-10-27 18:17:50] Evaluate_14: epoch = 0300 train time = 2 s train loss = 0.003670 train acc = 1.0000, test acc = 0.1112
[2023-10-27 18:17:54] Evaluate_15: epoch = 0300 train time = 2 s train loss = 0.003721 train acc = 1.0000, test acc = 0.1005
[2023-10-27 18:17:58] Evaluate_16: epoch = 0300 train time = 2 s train loss = 0.003643 train acc = 1.0000, test acc = 0.1099
[2023-10-27 18:18:03] Evaluate_17: epoch = 0300 train time = 2 s train loss = 0.003760 train acc = 1.0000, test acc = 0.1172
[2023-10-27 18:18:07] Evaluate_18: epoch = 0300 train time = 2 s train loss = 0.003739 train acc = 1.0000, test acc = 0.0977
[2023-10-27 18:18:12] Evaluate_19: epoch = 0300 train time = 2 s train loss = 0.003657 train acc = 1.0000, test acc = 0.1174
Evaluate 20 random ConvNet, mean = 0.1058 std = 0.0087
-------------------------
Traceback (most recent call last):
  File "main.py", line 266, in <module>
    main()
  File "main.py", line 222, in main
    img = image_syn[i].float().to(args.device)
IndexError: index 100 is out of bounds for dimension 0 with size 100
